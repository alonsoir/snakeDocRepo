/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package com.aironman.core.service;

import java.util.Properties;
import javax.mail.*;
import javax.mail.internet.*;

public class EnviarMail {

/**
 * @param args
 */
public static void main(String[] args) {
    // TODO Auto-generated method stub
    EnviarMail emailer = new EnviarMail();
    //the domains of these email addresses should be valid,
    //or the example will fail:
    emailer.sendEmail();
}

/**
  * Send a single email.
  */
public void sendEmail(){
Session mailSession = createSmtpSession();
mailSession.setDebug (true);

try {
    Transport transport = mailSession.getTransport ();

    MimeMessage message = new MimeMessage (mailSession);

    message.setSubject ("HTML  mail with images");
    message.setFrom (new InternetAddress ("myJavaEmailSender@gmail.com"));
    message.setContent ("<h1>Hello world</h1>", "text/html");
    message.addRecipient (Message.RecipientType.TO, new InternetAddress ("myRecipientAddress@gmail.com"));

    transport.connect ();
    transport.sendMessage (message, message.getRecipients (Message.RecipientType.TO));
}
catch (MessagingException e) {
    System.err.println("Cannot Send email");
    e.printStackTrace();
}
}

private Session createSmtpSession() {
final Properties props = new Properties();
props.setProperty ("mail.host", "smtp.gmail.com");
props.setProperty("mail.smtp.auth", "true");
props.setProperty("mail.smtp.port", "" + 587);
props.setProperty("mail.smtp.starttls.enable", "true");
props.setProperty ("mail.transport.protocol", "smtp");
props.setProperty("mail.debug", "true");

return Session.getDefaultInstance(props, new javax.mail.Authenticator() {
  protected PasswordAuthentication getPasswordAuthentication() {
    return new PasswordAuthentication("alonsoir@gmail.com", "auz77dbt");
  }
});
}

}
